(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{210:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return b})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return p}));var n=r(2),a=r(6),c=(r(0),r(214)),o={title:"DVL Checker"},b={unversionedId:"artifacts/DvlChecker",id:"artifacts/DvlChecker",isDocsHomePage:!1,title:"DVL Checker",description:"NAME",source:"@site/docs/artifacts/DvlChecker.md",slug:"/artifacts/DvlChecker",permalink:"/glasswall-sdk-site/docs/artifacts/DvlChecker",version:"current"},i=[{value:"<strong>NAME</strong>",id:"name",children:[]},{value:"<strong>SYNOPSIS</strong>",id:"synopsis",children:[]},{value:"<strong>DESCRIPTION</strong>",id:"description",children:[]},{value:"<strong>OPTIONS</strong>",id:"options",children:[]},{value:"<strong>EXIT STATUS</strong>",id:"exit-status",children:[]},{value:"<strong>FILES</strong>",id:"files",children:[]},{value:"<strong>VERSIONS</strong>",id:"versions",children:[]},{value:"<strong>NOTES</strong>",id:"notes",children:[]},{value:"<strong>EXAMPLES</strong>",id:"examples",children:[]},{value:"<strong>AUTHORS</strong>",id:"authors",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}],l={rightToc:i};function p(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},l,o,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"name"},Object(c.b)("strong",{parentName:"h3"},"NAME")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"dvl_checker")," - check DVL files for syntax errors"),Object(c.b)("h3",{id:"synopsis"},Object(c.b)("strong",{parentName:"h3"},"SYNOPSIS")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"dvl_checker -d")," ","(",Object(c.b)("em",{parentName:"p"},"dvl_file|dvl_directory"),")"," ","[",Object(c.b)("strong",{parentName:"p"},"-o")," ",Object(c.b)("em",{parentName:"p"},"output_directory")," ",Object(c.b)("strong",{parentName:"p"},"-x -r")," ","[","-s ",Object(c.b)("em",{parentName:"p"},"schema_file")," -c ","]"," ",Object(c.b)("strong",{parentName:"p"},"-i")," ",Object(c.b)("em",{parentName:"p"},"ignored_file_list"),"]","]","  "),Object(c.b)("h3",{id:"description"},Object(c.b)("strong",{parentName:"h3"},"DESCRIPTION")),Object(c.b)("p",null,"dvl_checker checks DVL files for syntax errors."),Object(c.b)("p",null,"Here is an overview of its architecture."),Object(c.b)("p",null,Object(c.b)("img",{alt:"Alt BuildValidationCppFiles",src:r(326).default})," "),Object(c.b)("h3",{id:"options"},Object(c.b)("strong",{parentName:"h3"},"OPTIONS")),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-d, --dvl"),Object(c.b)("br",{parentName:"p"}),"\n","Mandatory. The name of a DVL file to be parsed. If this is the only parameter, then this does a syntax check and reports to the command-line the result of the parse.  If the recurse option (",Object(c.b)("strong",{parentName:"p"},"-r"),", ",Object(c.b)("strong",{parentName:"p"},"--recurse"),") is used, then ",Object(c.b)("em",{parentName:"p"},"dvl_directory")," is used as the start of a search down through directories from that point, processing every DVL file found."),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-o, --output"),Object(c.b)("br",{parentName:"p"}),"\n","Output reports and generated code are sent here."),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-s, --schema"),Object(c.b)("br",{parentName:"p"}),"\n","The fully qualified path to the root BDDL file (e.g. ",Object(c.b)("em",{parentName:"p"},"WordCoreStreams.bdd"),") from which the camera is built. This will be parsed to find all the structures that require a validation function generated"),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-i, --ignore"),Object(c.b)("br",{parentName:"p"}),"\n","The full path to the file containing rules to be ignored"),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-c, --compile"),Object(c.b)("br",{parentName:"p"}),"\n","Cause the validation functions to be  generated and sent to ",Object(c.b)("em",{parentName:"p"},"output_directory")),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-x, --crosscheck"),Object(c.b)("br",{parentName:"p"}),"\n","Cause the expanded validation BDDL expressions to be generated and sent to ",Object(c.b)("em",{parentName:"p"},"output_directory")),Object(c.b)("p",null,"  ",Object(c.b)("strong",{parentName:"p"},"-r, --recurse"),Object(c.b)("br",{parentName:"p"}),"\n","If recurse option used, then ",Object(c.b)("em",{parentName:"p"},"dvl_directory")," is used to be the start of a search down through directories from that point, processing every DVL file found."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"-t, --trace"),Object(c.b)("br",{parentName:"p"}),"\n","Trace mode - for DVL debug only"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"-p, --pause"),Object(c.b)("br",{parentName:"p"}),"\n","Wait for key press at end"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--no_sort"),Object(c.b)("br",{parentName:"p"}),"\n","Do not sort validation methods"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--no_validation_methods"),Object(c.b)("br",{parentName:"p"}),"\n","Create empty validation methods"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--root"),Object(c.b)("br",{parentName:"p"}),"\n","Namespace and prefix for output code file"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--validclasses"),Object(c.b)("br",{parentName:"p"}),"\n","File containing names of valid classes - puts ",Object(c.b)("em",{parentName:"p"},"#ifdef")," around validation methods not on this list"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--help"),Object(c.b)("br",{parentName:"p"}),"\n","Display this help screen and exit."),Object(c.b)("h3",{id:"exit-status"},Object(c.b)("strong",{parentName:"h3"},"EXIT STATUS")),Object(c.b)("p",null,"TBD"),Object(c.b)("h3",{id:"files"},Object(c.b)("strong",{parentName:"h3"},"FILES")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"dvl_checker.exe"),Object(c.b)("li",{parentName:"ul"},"dvl_rule_classes.dll"),Object(c.b)("li",{parentName:"ul"},"Antlr4.Runtime.v4.0.dll"),Object(c.b)("li",{parentName:"ul"},"BinaryDOM.dll"),Object(c.b)("li",{parentName:"ul"},"CodeGenerationSupport.dll"),Object(c.b)("li",{parentName:"ul"},"CommandLine.dll"),Object(c.b)("li",{parentName:"ul"},"FileModelling.dll"),Object(c.b)("li",{parentName:"ul"},"ucp_grammar_classes.dll"),Object(c.b)("li",{parentName:"ul"},"ucpSchemaLibrary.dll"),Object(c.b)("li",{parentName:"ul"},"UcpToolSupport.dll"),Object(c.b)("li",{parentName:"ul"},"ucpUtility.dll")),Object(c.b)("h3",{id:"versions"},Object(c.b)("strong",{parentName:"h3"},"VERSIONS")),Object(c.b)("p",null,"DVL_Checker Version  2.1.1.1  "),Object(c.b)("h3",{id:"notes"},Object(c.b)("strong",{parentName:"h3"},"NOTES")),Object(c.b)("p",null,"These form the context in which ",Object(c.b)("em",{parentName:"p"},"dvl_checker")," should be run."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Do initial parse of DVL to confirm the raw parser syntax is correct"),Object(c.b)("li",{parentName:"ul"},"Understand the meaning and check the logic of rules against the capabilities of the language"),Object(c.b)("li",{parentName:"ul"},"Generate a comma-separated values (CSV) list of node names verses BDDL validation expressions"),Object(c.b)("li",{parentName:"ul"},"Generate a file of validation functions")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},'TBD: convert and link to Dia file "dvl_to_c++.dia"')),Object(c.b)("h3",{id:"examples"},Object(c.b)("strong",{parentName:"h3"},"EXAMPLES")),Object(c.b)("p",null,"Test Single File",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(c.b)("em",{parentName:"p"},"sttbfassoc.dvl")),Object(c.b)("p",null,"Recurse down a directory testing every file",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(c.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","validation","\\","MS-DOC")," ",Object(c.b)("strong",{parentName:"p"},"-r")),Object(c.b)("p",null,"Recurse down a directory testing every file and create a cross-reference",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(c.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","validation","\\","MS-DOC")," ",Object(c.b)("strong",{parentName:"p"},"-r -x -o")," ",Object(c.b)("em",{parentName:"p"},"c:","\\","temp","\\","myoutput"),"  "),Object(c.b)("p",null,"Recurse down a directory testing every file and create a compiled file (",Object(c.b)("em",{parentName:"p"},"validation.h")," file in ",Object(c.b)("em",{parentName:"p"},"report_directory"),")\n",Object(c.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(c.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","validation","\\","MS-DOC")," ",Object(c.b)("strong",{parentName:"p"},"-r -o")," ",Object(c.b)("em",{parentName:"p"},"c:","\\","temp","\\","myoutput")," ",Object(c.b)("strong",{parentName:"p"},"-s")," ",Object(c.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","bddl","\\","MS-DOC","\\","WordCoreStreams.bdd"),"  "),Object(c.b)("h3",{id:"authors"},Object(c.b)("strong",{parentName:"h3"},"AUTHORS")),Object(c.b)("p",null,"Steven Warner ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"mailto:swarner@glasswallsolutions.com"}),"swarner@glasswallsolutions.com")),Object(c.b)("h3",{id:"see-also"},"SEE ALSO"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Fill in with related scripts and specs (e.g., DVL and BDDL guides)")))}p.isMDXComponent=!0},214:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function b(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):b(b({},t),e)),r},s=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=p(r),u=n,m=s["".concat(o,".").concat(u)]||s[u]||d[u]||c;return r?a.a.createElement(m,b(b({ref:t},l),{},{components:r})):a.a.createElement(m,b({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,o=new Array(c);o[0]=u;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:n,o[1]=b;for(var l=2;l<c;l++)o[l]=r[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},326:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/BuildValidationCppFiles-42c35af6cc60cfac5981ade93ef7b8a0.jpg"}}]);