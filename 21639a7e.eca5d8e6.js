(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{278:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),s=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,h=p["".concat(c,".").concat(d)]||p[d]||u[d]||r;return n?a.a.createElement(h,o(o({ref:t},b),{},{components:n})):a.a.createElement(h,o({ref:t},b))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,c=new Array(r);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var b=2;b<r;b++)c[b]=n[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var i=n(2),a=n(6),r=(n(0),n(278)),c={title:"3.3 BDDL hints and Tips",sidebar_label:"3.3 BDDL hints and Tips"},o={unversionedId:"3-guides/3_3-BddlhintsAndTips",id:"3-guides/3_3-BddlhintsAndTips",isDocsHomePage:!1,title:"3.3 BDDL hints and Tips",description:"1. Introduction",source:"@site/docs/3-guides/3_3-BddlhintsAndTips.md",slug:"/3-guides/3_3-BddlhintsAndTips",permalink:"/docs/3-guides/3_3-BddlhintsAndTips",version:"current",sidebar_label:"3.3 BDDL hints and Tips",sidebar:"someSidebar",previous:{title:"3.2 BDDL Guidelines",permalink:"/docs/3-guides/3_2-BddlDeveloperGuidelines"},next:{title:"3.4 DVL Developer Guide",permalink:"/docs/3-guides/3_4-DVLGuide"}},l=[{value:"1. Introduction",id:"1-introduction",children:[]},{value:"2. Example Format",id:"2-example-format",children:[]},{value:"3. Developer Hints and Tips",id:"3-developer-hints-and-tips",children:[{value:"3.1 - Table Binaries and &quot;type * item&quot; construct",id:"31---table-binaries-and-type--item-construct",children:[]},{value:"3.2 About the usage of &#39;restrictions&#39; and &#39;AcceptRule&#39; on arrays",id:"32-about-the-usage-of-restrictions-and-acceptrule-on-arrays",children:[]},{value:"3.3 Using &#39;allowempty&#39;",id:"33-using-allowempty",children:[]},{value:"3.4 Bit Masking",id:"34-bit-masking",children:[]},{value:"3.5 Where you have a string defined in the BDD file",id:"35-where-you-have-a-string-defined-in-the-bdd-file",children:[]},{value:"3.6 About the usage of &#39;optional&#39;",id:"36-about-the-usage-of-optional",children:[]},{value:"3.7 Accessing a specific element of an array",id:"37-accessing-a-specific-element-of-an-array",children:[]},{value:"3.8 Accessing MS-ODRAW structures",id:"38-accessing-ms-odraw-structures",children:[]},{value:"3.9 Accessing MS-ODRAW structures: Further explanation",id:"39-accessing-ms-odraw-structures-further-explanation",children:[]}]},{value:"\xa9 2013 Glasswall Solutions Limited",id:"-2013-glasswall-solutions-limited",children:[]}],b={rightToc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"1-introduction"},"1. Introduction"),Object(r.b)("p",null,"This document is for use by the BDDL developers. If there are any\ntips and hints you want to pass on to your colleagues then enter\nthem in here."),Object(r.b)("h2",{id:"2-example-format"},"2. Example Format"),Object(r.b)("p",null,"Here's a suggestion for the format:"),Object(r.b)("p",null,"AUTHOR: Julie Noted",Object(r.b)("br",null),"\nDATE: 12 July 2013",Object(r.b)("br",null),"\nTIP: When writing a restriction and you want to test if a bit\nis set, DO NOT compare with 1, for example"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"... optional restrictions { fABCD & 0x7 == 1 }   <-- WRONG\n")),Object(r.b)("p",null,"use this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"... optional restrictions { fABCD & 0x7 }\n")),Object(r.b)("h2",{id:"3-developer-hints-and-tips"},"3. Developer Hints and Tips"),Object(r.b)("h3",{id:"31---table-binaries-and-type--item-construct"},'3.1 - Table Binaries and "type ',"[*]",' item" construct'),Object(r.b)("p",null,"AUTHOR: Steven Warner"),Object(r.b)("p",null,"No Table section is self contained. I should have made this clearer from the outset. The binary files of the form ",Object(r.b)("inlineCode",{parentName:"p"},"fibRgFcLcb"),Object(r.b)("em",{parentName:"p"},"nnnn"),".",Object(r.b)("em",{parentName:"p"},"AAAA"),Object(r.b)("inlineCode",{parentName:"p"},".bin")," (e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"fibRgFcLcb97.Clx.bin"),") are extracted from the ",Object(r.b)("inlineCode",{parentName:"p"},"1Table.bin")," file, which is a stream extracted from the CFB file in which the entire Office file is stored."),Object(r.b)("p",null,"These are extracted for Development Purposes only!"),Object(r.b)("p",null,"So the actual storage of the separate ",Object(r.b)("inlineCode",{parentName:"p"},"fibRgFcLcb"),Object(r.b)("em",{parentName:"p"},"nnnn"),".",Object(r.b)("em",{parentName:"p"},"AAAA"),Object(r.b)("inlineCode",{parentName:"p"},".bin"),"\nfiles is more like this."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"1Table.bin")," contains:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"fibRgFcLcb97.Clx.bin\nfibRgFcLcb97.Cmds.bin\nfibRgFcLcb97.DggInfo.bin\nfibRgFcLcb97.Dop.bin\nfibRgFcLcb97.PlcfBteChpx.bin\nfibRgFcLcb97.PlcfBteLvc.bin\nfibRgFcLcb97.PlcfBtePapx.bin\nfibRgFcLcb97.PlcfFldMom.bin\nfibRgFcLcb97.PlcfFldTxbx.bin\nfibRgFcLcb97.PlcfSed.bin\nfibRgFcLcb97.PlcfSpl.bin\nfibRgFcLcb97.PlcfTxbxBkd.bin\nfibRgFcLcb97.PlcftxbxTxt.bin\nfibRgFcLcb97.PlcSpaMom.bin\nfibRgFcLcb97.PlfLfo.bin\nfibRgFcLcb97.PlfLst.bin\nfibRgFcLcb97.Stshf.bin\nfibRgFcLcb97.StshfOrig.bin\nfibRgFcLcb97.SttbfAssoc.bin\nfibRgFcLcb97.SttbfFfn.bin\nfibRgFcLcb97.SttbListNames.bin\nfibRgFcLcb97.SttbSavedBy.bin\nfibRgFcLcb97.Wss.bin\n")),Object(r.b)("p",null,"Which means you cannot make any assumptions about being able to use\nthe ",Object(r.b)("inlineCode",{parentName:"p"},"[*]")," array range in these files, because they actually live inside\na larger structure in the real file and the ",Object(r.b)("inlineCode",{parentName:"p"},"[*]")," mechanism will\nincorrectly keep going into the following structures."),Object(r.b)("h3",{id:"32-about-the-usage-of-restrictions-and-acceptrule-on-arrays"},"3.2 About the usage of 'restrictions' and 'AcceptRule' on arrays"),Object(r.b)("p",null,"AUTHOR: Elvin Barreto-White"),Object(r.b)("p",null,"It is best to use ",Object(r.b)("inlineCode",{parentName:"p"},"AcceptRule")," in an array of a structure type as\nopposed to ",Object(r.b)("inlineCode",{parentName:"p"},"restrictions")," on the array."),Object(r.b)("p",null,"Example"),Object(r.b)("p",null,"Avoid doing this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"struct Example {\n    uint8 Size;\n    StructType [Size] data optional restrictions {parent.Size == 0x50};\n    uint64 [15] MoreStuff;\n}\n\nstruct StructType {\n    uint8 A;\n    uint8 B;\n    ...\n    uint8 z;\n}\n")),Object(r.b)("p",null,"Do this instead:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"struct Example {\n    uint8 Size;\n    StructType [Size] data optional;\n    uint64 [15] MoreStuff;\n}\n\nstruct StructType {\n    AcceptRule parent.Size == 0x50;\n    uint8 A;\n    uint8 B;\n    ...\n    uint8 z;\n}\n")),Object(r.b)("p",null,"In an array data item, the restrictions clause will be applied to\neach element, so if there's a sentinel value in the array (for\nexample), then the restrictions clause can be used on an array."),Object(r.b)("p",null,"Consider this:"),Object(r.b)("p",null,"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"struct WhiteSpace {\n    char[*] str optional restrictions {iswhitespace()};\n}\n")),Object(r.b)("p",null,"Here, ",Object(r.b)("inlineCode",{parentName:"p"},"str"),", will be the number of characters up to, but not including,\nany character that is not whitespace."),Object(r.b)("p",null,"or"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"struct equalsZero {\n    uint8[15] padding optional restrictions {current == 0};\n}\n")),Object(r.b)("p",null,"Here the ",Object(r.b)("inlineCode",{parentName:"p"},"padding")," field will stop processing if it encounter a value\nthat is not 0."),Object(r.b)("h3",{id:"33-using-allowempty"},"3.3 Using 'allowempty'"),Object(r.b)("p",null,"AUTHOR: unknown"),Object(r.b)("p",null,"Use ",Object(r.b)("inlineCode",{parentName:"p"},"allowempty")," on arrays that may or can be empty. It may be best\nto apply it to all arrays, unless the specification says otherwise."),Object(r.b)("h3",{id:"34-bit-masking"},"3.4 Bit Masking"),Object(r.b)("p",null,"AUTHOR: Jose Alonso"),Object(r.b)("p",null,"For a detailed introduction to bit masking, go to the BDDL\nDevelopment page in the Wiki ","-","-","-",">"," Presentation Notes ","-","-","-",">"," ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"TODO"}),"Bits and\nPieces (Valid link pending)"),", written by Martin O\\'Brien."),Object(r.b)("p",null,"Let's suppose we have a one-byte variable, called ",Object(r.b)("inlineCode",{parentName:"p"},"var_name"),", equal\nto ABCDEFGH (binary). If we want to know the value of the second bit,\nG (LSB being H), a way of doing it is as follows:"),Object(r.b)("p",null,"Example"),Object(r.b)("p",null,"We reset the other bits (we set them to zero). The binary number used\nin this operation is called a mask. In this example, the mask would\nbe 00000010 (binary), which is 0x02 (hexadecimal)."),Object(r.b)("p",null,"This is implemented as follows:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"(var_name & 0x02)\n")),Object(r.b)("p",null,"The result of this operation is either zero or two, depending on the\nvalue of the G flag."),Object(r.b)("p",null,"The bit-masking expression MUST be enclosed in parentheses."),Object(r.b)("p",null,"This is probably not what you want to:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"AcceptRule parent.fEFGHIJKL & 0x80 == 0x80;\n")),Object(r.b)("p",null,"Do this instead:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"AcceptRule (parent.fEFGHIJKL & 0x80) == 0x80; \n")),Object(r.b)("h3",{id:"35-where-you-have-a-string-defined-in-the-bdd-file"},"3.5 Where you have a string defined in the BDD file"),Object(r.b)("p",null,"AUTHOR: unknown"),Object(r.b)("p",null,"You should use one of the standard strings in ",Object(r.b)("inlineCode",{parentName:"p"},"common/plex.bdd"),"."),Object(r.b)("h3",{id:"36-about-the-usage-of-optional"},"3.6 About the usage of 'optional'"),Object(r.b)("p",null,"AUTHOR: Jose Alonso"),Object(r.b)("p",null,"If the ",Object(r.b)("inlineCode",{parentName:"p"},"optional")," keyword is used, a condition should be always used,\notherwise, ",Object(r.b)("inlineCode",{parentName:"p"},"optional")," is useless."),Object(r.b)("p",null,"Example"),Object(r.b)("p",null,"Avoid doing this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"struct myStruct {\n    STD std;\n    uint8 padding optional;\n}\n")),Object(r.b)("p",null,"Do this instead:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"struct Padding {\nAcceptRule (sizeof(std) % 2) != 0;\n}\n\nstruct myStruct {\n    STD std;\n    Padding padding optional;\n}\n")),Object(r.b)("h3",{id:"37-accessing-a-specific-element-of-an-array"},"3.7 Accessing a specific element of an array"),Object(r.b)("p",null,"AUTHOR: Roman Danilov"),Object(r.b)("p",null,"It is possible to access specific element of an array with the square\nbracket notation as you would in many programming languages:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'[comment="Fetches the first element of the aCP array"]\naCP[0];\n')),Object(r.b)("p",null,"It is also possible to access a specific substructure from a specific\nelement of the array. For example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'struct CharCount {\n    uint8 count;\n}\n\ndocument ParagraphDocument {\n    CharCount[5] charCount;\n    [comment="Accesses the first element of the charCount array and uses its count substructure to specify the size of the array"]\n    char[charCount[0].count] word1;\n    char[charCount[1].count] word2;\n    ...\n}\n')),Object(r.b)("h3",{id:"38-accessing-ms-odraw-structures"},"3.8 Accessing MS-ODRAW structures"),Object(r.b)("p",null,"AUTHOR: Roman Danilov"),Object(r.b)("p",null,"All the properties are stored in a structure called ",Object(r.b)("inlineCode",{parentName:"p"},"OfficeArtRGFOPTE"),"\nalongside their corresponding complex structure. ",Object(r.b)("inlineCode",{parentName:"p"},"OfficeArtRGFOPTE")," is\nmade up of two arrays. The first array stores the properties, made up\nof an ",Object(r.b)("inlineCode",{parentName:"p"},"OfficeArtFOPTEOPID")," followed by a 4 byte data field. The second\narray stores the corresponding complex structures when the ",Object(r.b)("inlineCode",{parentName:"p"},"fComplex"),"\nbit is set."),Object(r.b)("p",null,"In order to access the property to check whether the ",Object(r.b)("inlineCode",{parentName:"p"},"fComplex"),", or\nany other bit, is set you could do something similar to this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'parent.rgfopte[type() == "ThreeD_StyleBooleanProperties"].F == 0x0\n    ? ... \n    : ...;\n')),Object(r.b)("p",null,"In this example we are checking whether the ",Object(r.b)("inlineCode",{parentName:"p"},"F")," (",Object(r.b)("inlineCode",{parentName:"p"},"fc3DConstrainRotation"),")\nbit from the ",Object(r.b)("em",{parentName:"p"},"3D-Style Boolean Properties")," property is set (",Object(r.b)("em",{parentName:"p"},"3D-Style\nBoolean Properties")," is renamed to ",Object(r.b)("inlineCode",{parentName:"p"},"ThreeD_StyleBooleanProperties"),"\nto keep the DVL checker and Miraplacid happy). The square bracket\nnotation is used to find the ",Object(r.b)("inlineCode",{parentName:"p"},"ThreeD_StyleBooleanProperties")," structure\nand then access the ",Object(r.b)("inlineCode",{parentName:"p"},"F")," (",Object(r.b)("inlineCode",{parentName:"p"},"fc3DConstrainRotation"),") field. This should\nmostly work as long as there exists only one property of a specific\ntype in the array (from the data we have seen, this seems to be the\ncase). Replace the ",Object(r.b)("inlineCode",{parentName:"p"},"ThreeD_StyleBooleanProperties")," with your own\nstructure that you need to access and ",Object(r.b)("inlineCode",{parentName:"p"},".F")," with the field that you\nneed to access."),Object(r.b)("h3",{id:"39-accessing-ms-odraw-structures-further-explanation"},"3.9 Accessing MS-ODRAW structures: Further explanation"),Object(r.b)("p",null,"AUTHOR: Jose Alonso"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"rgfopte")," is an array of ",Object(r.b)("inlineCode",{parentName:"p"},"OfficeArtFOPTE")," records, which specifies\nproperty table entries (page 97 of ",Object(r.b)("em",{parentName:"p"},"[","MS-ODRAW","]"),")."),Object(r.b)("p",null,"If we have"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'rgfopte[0] = "c3DFillX";\nrgfopte[1] = "c3DFillY";\nrgfopte[2] = "c3DFillZ";\nrgfopte[3] = "ThreeD_StyleBooleanProperties";\n...\n')),Object(r.b)("p",null,"and we want to access the element containing the\n",Object(r.b)("inlineCode",{parentName:"p"},"ThreeD_StyleBooleanProperties")," structure, we can do the following"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"rgfopte[3]\n")),Object(r.b)("p",null,"or"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'rgfopte[type() == "ThreeD_StyleBooleanProperties"]\n')),Object(r.b)("p",null,"Therefore, in order to access any other structure or property set\ninside a .dvl or a .bdd file, this prefix has to be used"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),'parent.rgfopte[type() == "pib"]\n')),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"pib")," being the name of the structure to which we want access."),Object(r.b)("hr",null),Object(r.b)("p",null,"Developers: place your tips and hints here."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"-2013-glasswall-solutions-limited"},"\xa9"," 2013 Glasswall Solutions Limited"))}s.isMDXComponent=!0}}]);