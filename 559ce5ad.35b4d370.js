(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{134:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(2),l=r(6),a=(r(0),r(276)),i={title:"2.1.6.1 Building Project",sidebar_label:"2.1.6.1 Building Project"},o={unversionedId:"2-glasswall_core/2_1-glasswall_rebuild/2_1_6-build/2_1_6_1-building_project",id:"2-glasswall_core/2_1-glasswall_rebuild/2_1_6-build/2_1_6_1-building_project",isDocsHomePage:!1,title:"2.1.6.1 Building Project",description:"Source code Management",source:"@site/docs/2-glasswall_core/2_1-glasswall_rebuild/2_1_6-build/2_1_6_1-building_project.md",slug:"/2-glasswall_core/2_1-glasswall_rebuild/2_1_6-build/2_1_6_1-building_project",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/2_1-glasswall_rebuild/2_1_6-build/2_1_6_1-building_project",version:"current",sidebar_label:"2.1.6.1 Building Project",sidebar:"someSidebar",previous:{title:"2.1.5 Dependencies",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/2_1-glasswall_rebuild/2_1_5-dependencies"},next:{title:"2.1.6.2 Versioning",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/2_1-glasswall_rebuild/2_1_6-build/2_1_6_2-versioning"}},s=[{value:"Source code Management",id:"source-code-management",children:[]},{value:"Developer Builds",id:"developer-builds",children:[{value:"ADO Pipeline",id:"ado-pipeline",children:[]},{value:"Manual Builds",id:"manual-builds",children:[]}]},{value:"QA Builds",id:"qa-builds",children:[]}],c={rightToc:s};function u(e){var t=e.components,r=Object(l.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"source-code-management"},"Source code Management"),Object(a.b)("p",null,"Source code management is done using Azure DevOps (ADO). The Git version control system is used, and there is one master\nrepository per product or tool. The default Azure DevOps processes are used. More information on this can be found at\nthe following address: ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/devops/get-started/?view=azure-devops"}),"https://docs.microsoft.com/en-us/azure/devops/get-started/?view=azure-devops")," "),Object(a.b)("p",null,"Developers branch off from the master branch, and changes cannot be made directly on any master branch. Pull requests\nare used to review code and give feedback on changes before merging into the master branch. The following conditions\nmust be met for each pull request:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Every change must be associated with at least 1 work item."),Object(a.b)("li",{parentName:"ul"},"The pull request requires 2 reviewer approvals. "),Object(a.b)("li",{parentName:"ul"},"All gated check-in tests must pass."),Object(a.b)("li",{parentName:"ul"},"Where applicable, all unit tests must pass."),Object(a.b)("li",{parentName:"ul"},"All review comments must be resolved.")),Object(a.b)("h2",{id:"developer-builds"},"Developer Builds"),Object(a.b)("h3",{id:"ado-pipeline"},"ADO Pipeline"),Object(a.b)("p",null,"Developers can create a build locally or via Azure DevOps pipelines for any debugging and developer testing purposes."),Object(a.b)("h3",{id:"manual-builds"},"Manual Builds"),Object(a.b)("h4",{id:"example"},"Example"),Object(a.b)("h5",{id:"windows"},"Windows"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Prerequisites"),":"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Visual Studio 2017")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Steps")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Install Visual Studio 2017."),Object(a.b)("li",{parentName:"ul"},"Open a visual studio developer command prompt and run the following commands in the source directory containing the\nsolution file(.sln).")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"msbuild glasswall.classic.sln /p:Configuration=Release\n")),Object(a.b)("h5",{id:"linux"},"LINUX"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Prerequisites"),":"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Qt 5.9.6"),Object(a.b)("li",{parentName:"ul"},"GCC 4.8.5")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Steps")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Install GCC (v7.4.0) for Linux."),Object(a.b)("li",{parentName:"ul"},"Open a terminal, change the working directory to the source directory containing the make file and run the following\ncommands:")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"make -f glasswall.classic.makefile Release\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"NOTE"),": The build instructions in this document will produce a ",Object(a.b)("strong",{parentName:"p"},"Release")," build, to produce ",Object(a.b)("strong",{parentName:"p"},"Debug")," builds simply\nreplace the \u2018Release\u2019 flag with \u2018Debug\u2019 in the build command."),Object(a.b)("h2",{id:"qa-builds"},"QA Builds"),Object(a.b)("p",null,"A developer creates a pull request to the master branch when a change is ready for submission to QA. The pull request\nrequires approval from at least 2 reviewers before being committed to master. A numbered build is also triggered in the\nbuild pipeline on Azure DevOps. Automated gated check-in tests are conducted as part of the pull request process.\nOnce a code change is committed to the master branch, a build of the master code is automatically triggered.\nThe build output is pushed to a repository for QA testing."))}u.isMDXComponent=!0},276:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var n=r(0),l=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=l.a.createContext({}),u=function(e){var t=l.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},b=function(e){var t=u(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},p=l.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=u(r),p=n,m=b["".concat(i,".").concat(p)]||b[p]||d[p]||a;return r?l.a.createElement(m,o(o({ref:t},c),{},{components:r})):l.a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<a;c++)i[c]=r[c];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"}}]);