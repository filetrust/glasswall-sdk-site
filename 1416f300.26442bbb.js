(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{279:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return _}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),d=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=d(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),f=r,_=u["".concat(i,".").concat(f)]||u[f]||p[f]||a;return n?o.a.createElement(_,s(s({ref:t},c),{},{components:n})):o.a.createElement(_,s({ref:t},c))}));function _(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(2),o=n(6),a=(n(0),n(279)),i={title:"2.2.7.1 Introduction",sidebar_label:"2.2.7.1 Introduction"},s={unversionedId:"2-glasswall_core/2_2-glasswall_editor/2_2_7-editor_cli/2_2_7_1-introduction",id:"2-glasswall_core/2_2-glasswall_editor/2_2_7-editor_cli/2_2_7_1-introduction",isDocsHomePage:!1,title:"2.2.7.1 Introduction",description:"This document explains how to use the Glasswall CLI using the Windows command prompt or the terminal window for Linux, with an explanation of the parameters and using the configuration files.",source:"@site/docs/2-glasswall_core/2_2-glasswall_editor/2_2_7-editor_cli/2_2_7_1-introduction.md",slug:"/2-glasswall_core/2_2-glasswall_editor/2_2_7-editor_cli/2_2_7_1-introduction",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/2_2-glasswall_editor/2_2_7-editor_cli/2_2_7_1-introduction",version:"current",sidebar_label:"2.2.7.1 Introduction",sidebar:"someSidebar",previous:{title:"2.2.6.3.4 Appendix - Languages Other Than C++",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/2_2-glasswall_editor/2_2_6-sdk/2_2_6_3-examples/2_2_6_3_4-appendix"},next:{title:"2.2.7.2 Step by Step Setup",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/2_2-glasswall_editor/2_2_7-editor_cli/2_2_7_2-step_by_step"}},l=[{value:"Purpose",id:"purpose",children:[{value:"Test and Evaluation",id:"test-and-evaluation",children:[]},{value:"Not for Production Processing",id:"not-for-production-processing",children:[]}]}],c={rightToc:l};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This document explains how to use the Glasswall CLI using the Windows command prompt or the terminal window for Linux, with an explanation of the parameters and using the configuration files."),Object(a.b)("p",null,"For further details regarding Glasswall specific terminology, see the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/glasswall-sdk-site/docs/2-glasswall_core/2_2-glasswall_editor/2_2_1-product_description"}),Object(a.b)("strong",{parentName:"a"},Object(a.b)("em",{parentName:"strong"},"Core Engine Product Description.")))),Object(a.b)("h2",{id:"purpose"},"Purpose"),Object(a.b)("h3",{id:"test-and-evaluation"},"Test and Evaluation"),Object(a.b)("p",null,"The best use of Glasswall CLI is as a test or evaluation tool. The results provided can be examined and compared to give you a clear understanding of any issues or unwanted content within the files. Any invalid files will have the issues reported in the XML documents to show why they were non-conforming. You will also be able to see if any disallowed content was present that made the file non-conforming and decide if you want to rerun it in sanitise mode to remove that content."),Object(a.b)("h3",{id:"not-for-production-processing"},"Not for Production Processing"),Object(a.b)("p",null,"The Glasswall CLI is not suitable to be embedded within production processing systems. It has been designed as a test aid so does not have the robustness of the main Glasswall libraries."))}d.isMDXComponent=!0}}]);