(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{227:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return T}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},b=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=l(r),m=n,T=b["".concat(c,".").concat(m)]||b[m]||d[m]||o;return r?a.a.createElement(T,i(i({ref:t},p),{},{components:r})):a.a.createElement(T,i({ref:t},p))}));function T(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},56:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return y}));var n=r(2),a=r(6),o=(r(0),r(227)),c={},i={unversionedId:"2-glasswall_core/artifacts/analysis_report_GIF",id:"2-glasswall_core/artifacts/analysis_report_GIF",isDocsHomePage:!1,title:"analysis_report_GIF",description:"File Specific Analysis - GIF {#analysisreportGIF}",source:"@site/docs/2-glasswall_core/artifacts/analysis_report_GIF.md",slug:"/2-glasswall_core/artifacts/analysis_report_GIF",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/artifacts/analysis_report_GIF",version:"current",sidebar:"someSidebar",previous:{title:"analysis_report_EMF",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/artifacts/analysis_report_EMF"},next:{title:"analysis_report_JPEG",permalink:"/glasswall-sdk-site/docs/2-glasswall_core/artifacts/analysis_report_JPEG"}},s=[],p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",t)}},l=p("TABLE"),b=p("TR"),d=p("TH"),m=p("TD"),T={rightToc:s};function y(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},T,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"file-specific-analysis---gif-analysis_report_gif"},"File Specific Analysis - GIF {#analysis_report_GIF}"),Object(o.b)("p",null,"\\section gifGwDocumentSummary gw:DocumentSummary"),Object(o.b)(l,{mdxType:"TABLE"},Object(o.b)(b,{mdxType:"TR"},Object(o.b)(d,{mdxType:"TH"},"Node Name"),Object(o.b)(d,{mdxType:"TH"},"Description")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"gw:TotalSizeInBytes"),Object(o.b)(m,{mdxType:"TD"},"The size of the file passed in for processing")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"gw:FileType"),Object(o.b)(m,{mdxType:"TD"},"\u201cgif\u201d, passed in through the Glasswall API")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"gw:Version"),Object(o.b)(m,{mdxType:"TD"},"Read from the document\u2019s Data Stream Header"))),Object(o.b)("p",null,"\\section gifGwContentGroups gw:ContentGroups"),Object(o.b)(l,{mdxType:"TABLE"},Object(o.b)(b,{mdxType:"TR"},Object(o.b)(d,{mdxType:"TH"},"Group"),Object(o.b)(d,{mdxType:"TH"},"Description")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Colourtable"),Object(o.b)(m,{mdxType:"TD"},"Utilised to render raster-based graphics")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Extension Block Application XMP"),Object(o.b)(m,{mdxType:"TD"},"Data consisting of XMP (Extensible Metadata Platform) packets")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Extension Block Application"),Object(o.b)(m,{mdxType:"TD"},"Application identifier")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Extension Block"),Object(o.b)(m,{mdxType:"TD"},"Control, graphic-rendering and special purpose blocks")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Image Descriptor"),Object(o.b)(m,{mdxType:"TD"},"Contains parameters to process a table bsed image")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Local Colour Table"),Object(o.b)(m,{mdxType:"TD"},"Associated with graphics that immediately follows.\xa0\xa0Supercedes global colour table")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Logical Screen Descriptor"),Object(o.b)(m,{mdxType:"TD"},"Parameters definining area of display device")),Object(o.b)(b,{mdxType:"TR"},Object(o.b)(m,{mdxType:"TD"},"GIF Table Based Image Data"),Object(o.b)(m,{mdxType:"TD"},"Image data for a table based image"))))}y.isMDXComponent=!0}}]);