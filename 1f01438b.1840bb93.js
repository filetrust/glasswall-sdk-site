(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{289:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return u}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=a.a.createContext({}),s=function(e){var t=a.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,i=b(e,["components","mdxType","originalType","parentName"]),p=s(r),m=n,u=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?a.a.createElement(u,l(l({ref:t},i),{},{components:r})):a.a.createElement(u,l({ref:t},i))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var i=2;i<o;i++)c[i]=r[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},359:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/dvloverview-42c35af6cc60cfac5981ade93ef7b8a0.jpg"},91:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return b})),r.d(t,"default",(function(){return s}));var n=r(2),a=r(6),o=(r(0),r(289)),c={title:"7.4.1 DVL Checker",sidebar_label:"7.4.1 DVL Checker"},l={unversionedId:"7-tools/7_4-dvl/7_4_1-DVLChecker",id:"7-tools/7_4-dvl/7_4_1-DVLChecker",isDocsHomePage:!1,title:"7.4.1 DVL Checker",description:"NAME",source:"@site/docs/7-tools/7_4-dvl/7_4_1-DVLChecker.md",slug:"/7-tools/7_4-dvl/7_4_1-DVLChecker",permalink:"/glasswall-sdk-site/docs/7-tools/7_4-dvl/7_4_1-DVLChecker",version:"current",sidebar_label:"7.4.1 DVL Checker",sidebar:"someSidebar",previous:{title:"7.3.1 Doxygen Documentation Tool",permalink:"/glasswall-sdk-site/docs/7-tools/7_3-doxygen/7_3_1-GlasswallDLLDoxygenTool"},next:{title:"7.5.1 Extract String Literals",permalink:"/glasswall-sdk-site/docs/7-tools/7_5-developer_tools/7_5_1-ExtractStrLit"}},b=[{value:"<strong>NAME</strong>",id:"name",children:[]},{value:"<strong>SYNOPSIS</strong>",id:"synopsis",children:[]},{value:"<strong>DESCRIPTION</strong>",id:"description",children:[]},{value:"<strong>OPTIONS</strong>",id:"options",children:[]},{value:"<strong>EXIT STATUS</strong>",id:"exit-status",children:[]},{value:"<strong>FILES</strong>",id:"files",children:[]},{value:"<strong>VERSIONS</strong>",id:"versions",children:[]},{value:"<strong>NOTES</strong>",id:"notes",children:[]},{value:"<strong>EXAMPLES</strong>",id:"examples",children:[]},{value:"<strong>AUTHORS</strong>",id:"authors",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}],i={rightToc:b};function s(e){var t=e.components,c=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},i,c,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"name"},Object(o.b)("strong",{parentName:"h3"},"NAME")),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"dvl_checker")," - check DVL files for syntax errors"),Object(o.b)("h3",{id:"synopsis"},Object(o.b)("strong",{parentName:"h3"},"SYNOPSIS")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"dvl_checker -d")," ","(",Object(o.b)("em",{parentName:"p"},"dvl_file|dvl_directory"),")"," ","[",Object(o.b)("strong",{parentName:"p"},"-o")," ",Object(o.b)("em",{parentName:"p"},"output_directory")," ",Object(o.b)("strong",{parentName:"p"},"-x -r")," ","[","-s ",Object(o.b)("em",{parentName:"p"},"schema_file")," -c ","]"," ",Object(o.b)("strong",{parentName:"p"},"-i")," ",Object(o.b)("em",{parentName:"p"},"ignored_file_list"),"]","]","  "),Object(o.b)("h3",{id:"description"},Object(o.b)("strong",{parentName:"h3"},"DESCRIPTION")),Object(o.b)("p",null,"dvl_checker checks DVL files for syntax errors."),Object(o.b)("p",null,"Here is an overview of its architecture."),Object(o.b)("p",null,Object(o.b)("img",{alt:"Alt BuildValidationCppFiles",src:r(359).default})," "),Object(o.b)("h3",{id:"options"},Object(o.b)("strong",{parentName:"h3"},"OPTIONS")),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-d, --dvl"),Object(o.b)("br",{parentName:"p"}),"\n","Mandatory. The name of a DVL file to be parsed. If this is the only parameter, then this does a syntax check and reports to the command-line the result of the parse.  If the recurse option (",Object(o.b)("strong",{parentName:"p"},"-r"),", ",Object(o.b)("strong",{parentName:"p"},"--recurse"),") is used, then ",Object(o.b)("em",{parentName:"p"},"dvl_directory")," is used as the start of a search down through directories from that point, processing every DVL file found."),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-o, --output"),Object(o.b)("br",{parentName:"p"}),"\n","Output reports and generated code are sent here."),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-s, --schema"),Object(o.b)("br",{parentName:"p"}),"\n","The fully qualified path to the root BDDL file (e.g. ",Object(o.b)("em",{parentName:"p"},"WordCoreStreams.bdd"),") from which the camera is built. This will be parsed to find all the structures that require a validation function generated"),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-i, --ignore"),Object(o.b)("br",{parentName:"p"}),"\n","The full path to the file containing rules to be ignored"),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-c, --compile"),Object(o.b)("br",{parentName:"p"}),"\n","Cause the validation functions to be  generated and sent to ",Object(o.b)("em",{parentName:"p"},"output_directory")),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-x, --crosscheck"),Object(o.b)("br",{parentName:"p"}),"\n","Cause the expanded validation BDDL expressions to be generated and sent to ",Object(o.b)("em",{parentName:"p"},"output_directory")),Object(o.b)("p",null,"  ",Object(o.b)("strong",{parentName:"p"},"-r, --recurse"),Object(o.b)("br",{parentName:"p"}),"\n","If recurse option used, then ",Object(o.b)("em",{parentName:"p"},"dvl_directory")," is used to be the start of a search down through directories from that point, processing every DVL file found."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"-t, --trace"),Object(o.b)("br",{parentName:"p"}),"\n","Trace mode - for DVL debug only"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"-p, --pause"),Object(o.b)("br",{parentName:"p"}),"\n","Wait for key press at end"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"--no_sort"),Object(o.b)("br",{parentName:"p"}),"\n","Do not sort validation methods"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"--no_validation_methods"),Object(o.b)("br",{parentName:"p"}),"\n","Create empty validation methods"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"--root"),Object(o.b)("br",{parentName:"p"}),"\n","Namespace and prefix for output code file"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"--validclasses"),Object(o.b)("br",{parentName:"p"}),"\n","File containing names of valid classes - puts ",Object(o.b)("em",{parentName:"p"},"#ifdef")," around validation methods not on this list"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"--help"),Object(o.b)("br",{parentName:"p"}),"\n","Display this help screen and exit."),Object(o.b)("h3",{id:"exit-status"},Object(o.b)("strong",{parentName:"h3"},"EXIT STATUS")),Object(o.b)("p",null,"TBD"),Object(o.b)("h3",{id:"files"},Object(o.b)("strong",{parentName:"h3"},"FILES")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"dvl_checker.exe"),Object(o.b)("li",{parentName:"ul"},"dvl_rule_classes.dll"),Object(o.b)("li",{parentName:"ul"},"Antlr4.Runtime.v4.0.dll"),Object(o.b)("li",{parentName:"ul"},"BinaryDOM.dll"),Object(o.b)("li",{parentName:"ul"},"CodeGenerationSupport.dll"),Object(o.b)("li",{parentName:"ul"},"CommandLine.dll"),Object(o.b)("li",{parentName:"ul"},"FileModelling.dll"),Object(o.b)("li",{parentName:"ul"},"ucp_grammar_classes.dll"),Object(o.b)("li",{parentName:"ul"},"ucpSchemaLibrary.dll"),Object(o.b)("li",{parentName:"ul"},"UcpToolSupport.dll"),Object(o.b)("li",{parentName:"ul"},"ucpUtility.dll")),Object(o.b)("h3",{id:"versions"},Object(o.b)("strong",{parentName:"h3"},"VERSIONS")),Object(o.b)("p",null,"DVL_Checker Version  2.1.1.1  "),Object(o.b)("h3",{id:"notes"},Object(o.b)("strong",{parentName:"h3"},"NOTES")),Object(o.b)("p",null,"These form the context in which ",Object(o.b)("em",{parentName:"p"},"dvl_checker")," should be run."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Do initial parse of DVL to confirm the raw parser syntax is correct"),Object(o.b)("li",{parentName:"ul"},"Understand the meaning and check the logic of rules against the capabilities of the language"),Object(o.b)("li",{parentName:"ul"},"Generate a comma-separated values (CSV) list of node names verses BDDL validation expressions"),Object(o.b)("li",{parentName:"ul"},"Generate a file of validation functions")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},'TBD: convert and link to Dia file "dvl_to_c++.dia"')),Object(o.b)("h3",{id:"examples"},Object(o.b)("strong",{parentName:"h3"},"EXAMPLES")),Object(o.b)("p",null,"Test Single File",Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(o.b)("em",{parentName:"p"},"sttbfassoc.dvl")),Object(o.b)("p",null,"Recurse down a directory testing every file",Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(o.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","validation","\\","MS-DOC")," ",Object(o.b)("strong",{parentName:"p"},"-r")),Object(o.b)("p",null,"Recurse down a directory testing every file and create a cross-reference",Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(o.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","validation","\\","MS-DOC")," ",Object(o.b)("strong",{parentName:"p"},"-r -x -o")," ",Object(o.b)("em",{parentName:"p"},"c:","\\","temp","\\","myoutput"),"  "),Object(o.b)("p",null,"Recurse down a directory testing every file and create a compiled file (",Object(o.b)("em",{parentName:"p"},"validation.h")," file in ",Object(o.b)("em",{parentName:"p"},"report_directory"),")\n",Object(o.b)("strong",{parentName:"p"},"dvl_checker -d")," ",Object(o.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","validation","\\","MS-DOC")," ",Object(o.b)("strong",{parentName:"p"},"-r -o")," ",Object(o.b)("em",{parentName:"p"},"c:","\\","temp","\\","myoutput")," ",Object(o.b)("strong",{parentName:"p"},"-s")," ",Object(o.b)("em",{parentName:"p"},"e:","\\","data.definitions.and.rules","\\","Camera_Definitions","\\","MSOffice","\\","bddl","\\","MS-DOC","\\","WordCoreStreams.bdd"),"  "),Object(o.b)("h3",{id:"authors"},Object(o.b)("strong",{parentName:"h3"},"AUTHORS")),Object(o.b)("p",null,"Steven Warner ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"mailto:swarner@glasswallsolutions.com"}),"swarner@glasswallsolutions.com")),Object(o.b)("h3",{id:"see-also"},"SEE ALSO"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Fill in with related scripts and specs (e.g., DVL and BDDL guides)")))}s.isMDXComponent=!0}}]);