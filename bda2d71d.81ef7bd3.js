(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{217:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return l}));var s=n(2),r=n(6),a=(n(0),n(278)),i={title:"4.2.2.2 XSD Test Results",sidebar_label:"4.2.2.2 XSD Test Results"},o={unversionedId:"4-testing/4_2-automated testing/4_2_2-analysistesting/4_2_2_2-TestResultsXSD",id:"4-testing/4_2-automated testing/4_2_2-analysistesting/4_2_2_2-TestResultsXSD",isDocsHomePage:!1,title:"4.2.2.2 XSD Test Results",description:"`",source:"@site/docs/4-testing/4_2-automated testing/4_2_2-analysistesting/4_2_2_2-TestResultsXSD.md",slug:"/4-testing/4_2-automated testing/4_2_2-analysistesting/4_2_2_2-TestResultsXSD",permalink:"/glasswall-sdk-site/docs/4-testing/4_2-automated testing/4_2_2-analysistesting/4_2_2_2-TestResultsXSD",version:"current",sidebar_label:"4.2.2.2 XSD Test Results",sidebar:"someSidebar",previous:{title:"4.2.2.1 XSD Analysis Repository and Reporting System",permalink:"/glasswall-sdk-site/docs/4-testing/4_2-automated testing/4_2_2-analysistesting/4_2_2_1-AnalysisRepositoryandReportingSystem"},next:{title:"4.3 Manual Testing",permalink:"/glasswall-sdk-site/docs/4-testing/4_3-manual_testing"}},u=[],c={rightToc:u};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(s.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{className:"language-<?xml",metastring:'version="1.0" encoding="UTF-8"?>',version:'"1.0"',encoding:'"UTF-8"?>'}),'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">\n \x3c!-- XML Schema Generated from XML Document on Thu Jun 01 2017 10:37:22 GMT+0100 (GMT Daylight Time) --\x3e\n <xs:element name="TestCases">\n     <xs:complexType>\n       <xs:sequence>\n           <xs:element name="TestCase" maxOccurs="unbounded">\n             <xs:complexType>\n                 <xs:sequence>\n                   <xs:element name="Tests" minOccurs="0">\n                       <xs:complexType>\n                         <xs:sequence>\n                             <xs:element name="Test" minOccurs = "0" maxOccurs="unbounded">\n                               <xs:complexType>\n                                   <xs:sequence>\n                                     <xs:element   name="FailedFiles" minOccurs="0" maxOccurs="unbounded">\n                                       <xs:complexType>\n                                         <xs:sequence>\n                                            <xs:element name="FailedFile" minOccurs="0" maxOccurs="unbounded">\n                                                <xs:complexType>\n                                                    <xs:simpleContent>\n                                                    <xs:extension base="xs:string">\n                                                        <xs:attribute name="FailureReason" type="xs:string" />\n                                                    </xs:extension>\n                                                    </xs:simpleContent>\n                                                </xs:complexType>\n                                            </xs:element>\n                                        </xs:sequence>\n                                       </xs:complexType>\n                                     </xs:element>\n                                   </xs:sequence>\n                                   <xs:attribute name="Description" type="xs:string" use="required"></xs:attribute>\n                                   <xs:attribute name="Name" type="xs:string"></xs:attribute>\n                                   <xs:attribute name="Result" use="required">\n                                    <xs:simpleType>\n                                      <xs:restriction base="xs:string">\n                                        <xs:enumeration value="Success"/>\n                                        <xs:enumeration value="Fail"/>\n                                      </xs:restriction>\n                                    </xs:simpleType>\n                                   </xs:attribute>\n                               </xs:complexType>\n                             </xs:element>\n                         </xs:sequence>\n                       </xs:complexType>\n                   </xs:element>\n                 </xs:sequence>\n                 <xs:attribute name="Description" type="xs:string" use="required"></xs:attribute>\n                 <xs:attribute name="Name" type="xs:string"></xs:attribute>\n                 <xs:attribute name="ID" type="xs:int"></xs:attribute>\n                 <xs:attribute  name="Result" use="required">\n                  <xs:simpleType>\n                    <xs:restriction   base="xs:string">\n                      <xs:enumeration value="Success"/>\n                      <xs:enumeration value="Fail"/>\n                    </xs:restriction>\n                  </xs:simpleType>\n                 </xs:attribute>\n             </xs:complexType>\n           </xs:element>\n       </xs:sequence>\n       <xs:attribute name="PathToLibrary" type="xs:string"></xs:attribute>\n     </xs:complexType>\n </xs:element>\n</xs:schema>\n\n')))}l.isMDXComponent=!0},278:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return y}));var s=n(0),r=n.n(s);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),l=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=l(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},x=r.a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=l(n),x=s,y=m["".concat(i,".").concat(x)]||m[x]||p[x]||a;return n?r.a.createElement(y,o(o({ref:t},c),{},{components:n})):r.a.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=x;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var c=2;c<a;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}x.displayName="MDXCreateElement"}}]);