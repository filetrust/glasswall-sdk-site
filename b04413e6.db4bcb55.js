(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{174:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),c=(n(0),n(218)),s={title:"Get Excel Version"},l={unversionedId:"artifacts/GetExcelVersion",id:"artifacts/GetExcelVersion",isDocsHomePage:!1,title:"Get Excel Version",description:"NAME",source:"@site/docs/artifacts/GetExcelVersion.md",slug:"/artifacts/GetExcelVersion",permalink:"/glasswall-sdk-site/docs/artifacts/GetExcelVersion",version:"current",sidebar:"someSidebar",previous:{title:"Find DIFAT",permalink:"/glasswall-sdk-site/docs/artifacts/FindDIFAT"},next:{title:"GetPowerPointVersion",permalink:"/glasswall-sdk-site/docs/artifacts/GetPowerPointVersion"}},i=[{value:"<strong>NAME</strong>",id:"name",children:[]},{value:"<strong>SYNOPSIS</strong>",id:"synopsis",children:[]},{value:"<strong>DESCRIPTION</strong>",id:"description",children:[]},{value:"<strong>OPTIONS</strong>",id:"options",children:[]},{value:"<strong>EXIT STATUS</strong>",id:"exit-status",children:[]},{value:"<strong>NOTES</strong>",id:"notes",children:[]},{value:"<strong>EXAMPLES</strong>",id:"examples",children:[]},{value:"<strong>AUTHOR</strong>",id:"author",children:[]}],o={rightToc:i};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"name"},Object(c.b)("strong",{parentName:"h3"},"NAME")),Object(c.b)("p",null,"\u2003","\u2003","\u2003","\u2003","getExcelVersion - report versions of Excel Binary File Format files"),Object(c.b)("h3",{id:"synopsis"},Object(c.b)("strong",{parentName:"h3"},"SYNOPSIS")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"getExcelVersion")," ",Object(c.b)("strong",{parentName:"p"},"--in"),"(=| )",Object(c.b)("em",{parentName:"p"},"input_directory")," ",Object(c.b)("strong",{parentName:"p"},"--out"),"(=| )",Object(c.b)("em",{parentName:"p"},"output_file"),"  ","[",Object(c.b)("strong",{parentName:"p"},"--files"),"]",Object(c.b)("strong",{parentName:"p"},"--debug"),"]",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"getExcelVersion")," ",Object(c.b)("strong",{parentName:"p"},"--in"),"(=| )",Object(c.b)("em",{parentName:"p"},"input_directory")," ",Object(c.b)("strong",{parentName:"p"},"--out"),"(=| )",Object(c.b)("em",{parentName:"p"},"output_file"),"  ",Object(c.b)("strong",{parentName:"p"},"--copy")," ",Object(c.b)("strong",{parentName:"p"},"--target_dir"),"(=| )",Object(c.b)("em",{parentName:"p"},"target_directory")," ","[",Object(c.b)("strong",{parentName:"p"},"--files"),"]",Object(c.b)("strong",{parentName:"p"},"--debug"),"]",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"getExcelVersion")," ",Object(c.b)("strong",{parentName:"p"},"--in"),"(=| )",Object(c.b)("em",{parentName:"p"},"input_directory")," ",Object(c.b)("strong",{parentName:"p"},"--out"),"(=| )",Object(c.b)("em",{parentName:"p"},"output_file"),"  ",Object(c.b)("strong",{parentName:"p"},"--move")," ",Object(c.b)("strong",{parentName:"p"},"--target_dir"),"(=| )",Object(c.b)("em",{parentName:"p"},"target_directory")," ","[",Object(c.b)("strong",{parentName:"p"},"--files"),"]",Object(c.b)("strong",{parentName:"p"},"--debug"),"]",Object(c.b)("br",{parentName:"p"}),"\n",Object(c.b)("strong",{parentName:"p"},"getExcelVersion")," (",Object(c.b)("strong",{parentName:"p"},"--usage")," | ",Object(c.b)("strong",{parentName:"p"},"--help")," | ",Object(c.b)("strong",{parentName:"p"},"--version")," | ",Object(c.b)("strong",{parentName:"p"},"--man"),")"),Object(c.b)("h3",{id:"description"},Object(c.b)("strong",{parentName:"h3"},"DESCRIPTION")),Object(c.b)("p",null,"Read in each file whose extension matches the file glob ",Object(c.b)("em",{parentName:"p"},"*",".xls")," in ",Object(c.b)("em",{parentName:"p"},"input_directory")," and all subdirectories. Report the version of each matched file."),Object(c.b)("h3",{id:"options"},Object(c.b)("strong",{parentName:"h3"},"OPTIONS")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--in"),Object(c.b)("br",{parentName:"p"}),"\n","The name of the directory containing the files to be analysed. getExcelVersion will recurse downward through all sub-directories and\nprocess all files with extension .xls."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--out"),Object(c.b)("br",{parentName:"p"}),"\n","The name of the file where the analysis will be placed."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--copy"),Object(c.b)("br",{parentName:"p"}),"\n","Create version-named sub-directories under ",Object(c.b)("em",{parentName:"p"},"target_directory")," and copy files there."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--move"),Object(c.b)("br",{parentName:"p"}),"\n","Create version-named sub-directories under ",Object(c.b)("em",{parentName:"p"},"target_directory")," and move files there."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--target_dir"),Object(c.b)("br",{parentName:"p"}),"\n","Mandatory if ",Object(c.b)("strong",{parentName:"p"},"--copy")," or ",Object(c.b)("strong",{parentName:"p"},"--move")," is specified. The directory into which sub-directories named after versions will be created and where the files will be moved or copied. This directory must exist."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--files"),Object(c.b)("br",{parentName:"p"}),"\n","Group the file by version."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--man"),Object(c.b)("br",{parentName:"p"}),"\n","Display complete documentation and exit."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--help"),Object(c.b)("br",{parentName:"p"}),"\n","Display usage and one-line summary of each option and exit."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--version"),Object(c.b)("br",{parentName:"p"}),"\n","Display version information and exit."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--usage"),Object(c.b)("br",{parentName:"p"}),"\n","Display usage and exit."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"--debug"),Object(c.b)("br",{parentName:"p"}),"\n","Place debug information in file ",Object(c.b)("em",{parentName:"p"},"getExcelVersion_DEBUG.txt"),". For development purposes."),Object(c.b)("h3",{id:"exit-status"},Object(c.b)("strong",{parentName:"h3"},"EXIT STATUS")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Status"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"0"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"success")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"non-zero"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"error")))),Object(c.b)("h3",{id:"notes"},Object(c.b)("strong",{parentName:"h3"},"NOTES")),Object(c.b)("p",null,"The script is designed to continue processing if exceptions are thrown when attempting to open a file (e.g., if filenames contain non-ASCII characters). Exceptions will be reported on the command-line, but processing will continue and ",Object(c.b)("em",{parentName:"p"},"output_file")," will be produced."),Object(c.b)("h3",{id:"examples"},Object(c.b)("strong",{parentName:"h3"},"EXAMPLES")),Object(c.b)("p",null,"The following command will recurse downward through the ",Object(c.b)("em",{parentName:"p"},"c:\\TestData\\OFFICE\\XLS")," directory and report in file ",Object(c.b)("em",{parentName:"p"},"getExcelVersion.txt")," version-related statistics for all files with file extension .xls. "),Object(c.b)("p",null,"\xa0","\xa0","\xa0","\xa0",Object(c.b)("strong",{parentName:"p"},"getExcelVersion --in c:\\TestData\\OFFICE\\XLS --out getExcelVersion.txt"),"  "),Object(c.b)("p",null,"Here is the content of ",Object(c.b)("em",{parentName:"p"},"getExcelVersion.txt"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"------------------------------------------------------------------------\nFILE NAME: C:\\getExcelVersion.txt\nDATE: 2020-11-03 16:45:59Z\nCopyright \xa9 2020 Glasswall Solutions Limited\n------------------------------------------------------------------------\nExcel 1997  37   13.0%\nExcel 2000  46   16.2%\nExcel 2002  64   22.5%\nExcel 2003  56   19.7%\nExcel 2007  49   17.3%\nExcel 2010  29   10.2%\nTotal files analysed: 284\n------------------------------------------------------------------------\nList of invalid values for verLastXLSaved:\n\n0X07:\n    PassProtectAll01_Excel1997_0000008.xls\n    ProtectCSheet01_Excel1997_0000008.xls\n    ProtectStructure_01_Excel1997_0000008.xls\n------------------------------------------------------------------------\nFILE C:\\getExcelVersion.txt closed at 2020-11-03 16:46:07Z\nCopyright \xa9 2020 Glasswall Solutions Limited\n------------------------------------------------------------------------\n")),Object(c.b)("p",null,"The following command will recurse downward through the ",Object(c.b)("em",{parentName:"p"},"c:\\TestData\\OFFICE\\XLS")," directory and report in file ",Object(c.b)("em",{parentName:"p"},"c:\\getExcelVersion_OUTPUT.txt")," version-related statistics for all files with file extension .xls. It will create subdirectories in directory ",Object(c.b)("em",{parentName:"p"},"c:\\getExcelVersion")," named after the versions and copy files of those version into them."),Object(c.b)("p",null,"\xa0","\xa0","\xa0","\xa0",Object(c.b)("strong",{parentName:"p"},"getExcelVersion --in c:\\TestData\\OFFICE\\XLS --out c:\\getExcelVersion_OUTPUT.txt --copy --target_dir c:\\getExcelVersion"),Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","Running findDIFAT.exe version 1.0.0",Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","Start time:  Tue Nov  3 15:11:14 2020",Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","Copying files",Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","...Done",Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","End time: Tue Nov  3 15:11:14 2020  "),Object(c.b)("p",null,"\xa0","\xa0","\xa0","\xa0","This exe file was created with the evaluation version of Perl2Exe.",Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","For more information visit ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.indigostar.com"}),"http://www.indigostar.com"),Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","(The full version does not display this message with a 2 second delay.)",Object(c.b)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","...  "),Object(c.b)("p",null,"Below is part of the content of ",Object(c.b)("em",{parentName:"p"},"c:\\getExcelVersion.txt"),". Each ellipsis (...) indicates a section of text has been removed for brevity in this document. Note also that any errors are reported in the file."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"------------------------------------------------------------------------\nFILE NAME: C:\\getExcelVersion.txt\nDATE: 2020-11-04 09:15:48Z\nCopyright \xa9 2020 Glasswall Solutions Limited\n------------------------------------------------------------------------\nExcel 1997  37   13.0%\nExcel 2000  46   16.2%\nExcel 2002  64   22.5%\nExcel 2003  56   19.7%\nExcel 2007  49   17.3%\nExcel 2010  29   10.2%\nTotal files analysed: 284\n------------------------------------------------------------------------\nList of invalid values for verLastXLSaved:\n\n0X07:\n    PassProtectAll01_Excel1997_0000008.xls\n    ProtectCSheet01_Excel1997_0000008.xls\n    ProtectStructure_01_Excel1997_0000008.xls\n------------------------------------------------------------------------\nFile names grouped by version:\nExcel 1997:\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel1997_0000013.xls\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel1997_0000017.xls\n    ...\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel1997 [0009] (01)/01_Excel1997_0004657.xls\n    c:\\TestData\\OFFICE\\XLS/XLS_008/MAC_EmptyVBA_01_Excel1997_0004982.xls\nExcel 2000:\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2000_0000072.xls\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2000_0000074.xls\n    ...\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2000 [0009] (01)/01_Excel2000_0006692.xls\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2000 [0009] (01)/01_Excel2000_0006694.xls\nExcel 2002:\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2002_0000153.xls\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2002_0000154.xls\n    ...\n    c:\\TestData\\OFFICE\\XLS/XLS_008/MET_01_Excel2002_0000057.xls\n    c:\\TestData\\OFFICE\\XLS/XLS_008/MET_01_Excel2002_0000061.xls\nExcel 2003:\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2003_0000450.xls\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2003_0000451.xls\n    ...\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2003 [0001] (01)/01_Excel2003_0001790.xls\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2003 [0001] (03)/01_Excel2003_0000128.xls\nExcel 2007:\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2007_0000500.xls\n    c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2007_0000672.xls\n    ...\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2007 [0007] (01)/01_Excel2007_0002516.xls\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2007 [0007] (01)/01_Excel2007_0003858.xls\nExcel 2010:\n    c:\\TestData\\OFFICE\\XLS/Large_VBA_Project/00007_example-multimodaltool.xls\n    c:\\TestData\\OFFICE\\XLS/SANITY-TEST-SET_01/Embedded_Files/Tester_EmbeddedBMP.xls\n    ...\n    c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2010 With Macros [0001] (01)/01_Excel2010_0000280.xls\n    c:\\TestData\\OFFICE\\XLS/XLS_008/Tester_EmbeddedPNG.xls\n------------------------------------------------------------------------\nCopying files in Excel 1997:\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel1997_0000013.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel1997_0000017.xls.\n    ...\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel1997 [0009] (01)/01_Excel1997_0000509.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel1997 [0009] (01)/01_Excel1997_0004657.xls.\nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/MAC_EmptyVBA_01_Excel1997_0004982.xls: \nCopying files in Excel 2000:\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2000_0000072.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2000_0000074.xls.\n    ...\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2000 [0009] (01)/01_Excel2000_0006692.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2000 [0009] (01)/01_Excel2000_0006694.xls.\nCopying files in Excel 2002:\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2002_0000153.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2002_0000154.xls.\n    ...\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2002 [0009] (01)/01_Excel2002_0006558.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2002 [0009] (01)/01_Excel2002_0006562.xls.\nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/EMB_01_Excel2002_0003760.xls: \nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/HYP_01_Excel2002_0000042.xls: \nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/HYP_01_Excel2002_0000154.xls: \nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/MAC_EmptyVBA_01_Excel2002_0000124.xls: \nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/MET_01_Excel2002_0000057.xls: \nError copying file c:\\TestData\\OFFICE\\XLS/XLS_008/MET_01_Excel2002_0000061.xls: \nCopying files in Excel 2003:\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2003_0000450.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2003_0000451.xls.\n    ...\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2003 [0001] (01)/01_Excel2003_0001790.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2003 [0001] (03)/01_Excel2003_0000128.xls.\nCopying files in Excel 2007:\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2007_0000500.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/Bugs3002-7-8 Test Files XLS/01_Excel2007_0000672.xls.\n    ...\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2007 [0007] (01)/01_Excel2007_0002516.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2007 [0007] (01)/01_Excel2007_0003858.xls.\nCopying files in Excel 2010:\n    Copied c:\\TestData\\OFFICE\\XLS/Large_VBA_Project/00007_example-multimodaltool.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/SANITY-TEST-SET_01/Embedded_Files/Tester_EmbeddedBMP.xls.\n    ...\n    Copied c:\\TestData\\OFFICE\\XLS/With_DIFAT/Excel2010 With Macros [0001] (01)/01_Excel2010_0000280.xls.\n    Copied c:\\TestData\\OFFICE\\XLS/XLS_008/Tester_EmbeddedPNG.xls.\n------------------------------------------------------------------------\nFILE C:\\getExcelVersion.txt closed at 2020-11-04 09:16:04Z\nCopyright \xa9 2020 Glasswall Solutions Limited\n------------------------------------------------------------------------\n")),Object(c.b)("h3",{id:"author"},Object(c.b)("strong",{parentName:"h3"},"AUTHOR")),Object(c.b)("p",null,"Martin O'Brien ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"mailto:mobrien@glasswallsolutions.com"}),"mobrien@glasswallsolutions.com")))}p.isMDXComponent=!0},218:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},E=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),b=p(n),E=a,m=b["".concat(s,".").concat(E)]||b[E]||O[E]||c;return n?r.a.createElement(m,l(l({ref:t},o),{},{components:n})):r.a.createElement(m,l({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,s=new Array(c);s[0]=E;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var o=2;o<c;o++)s[o]=n[o];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}E.displayName="MDXCreateElement"}}]);